[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column lat using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "lat",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column lon using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "lon",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "removing asterisks",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"*\", \"\")",       
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression value.toTitlecase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "lat",
          "from": 0,
          "to": 34,
          "type": "range",
          "columnName": "lat"
        }
      ]
    }
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "selectNumeric": true,
          "expression": "value",
          "selectBlank": true,
          "selectNonNumeric": true,
          "selectError": true,
          "name": "lon",
          "from": -90,
          "to": 0,
          "type": "range",
          "columnName": "lon"
        }
      ]
    }
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \"Spa\", \"S.p.A.\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"Spa\", \"S.p.A.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \"Srl\", \"S.R.L.\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"Srl\", \"S.R.L.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \"Sas\", \"S.A.S.\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"Sas\", \"S.A.S.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \"Snc\", \"S.N.C.\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"Snc\", \"S.N.C.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \" Di \", \" di \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "invert": false,
          "caseSensitive": true,
          "query": "\\w*(?<! di ) Di ",
          "name": "operator",
          "type": "text",
          "columnName": "operator"
        }
      ]
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \" Di \", \" di \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \"Societa' \", \"Società \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"Societa' \", \"Società \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \"Responsabilita' \", \"Responsabilità \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"Responsabilita' \", \"Responsabilità \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression grel:replace(value, \" In \", \" in \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \" In \", \" in \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "A>a",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \" A \", \" a \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "E>e",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \" E \", \" e \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Sigla>sigla",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \" Sigla \", \" sigla \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "F.Lli>f.lli",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \" F.Lli \", \" f.lli \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Dei>dei",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \" Dei \", \" dei \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "S.P.A>S.p.A.",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "grel:replace(value, \"S.P.A.\", \"S.p.A.\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
 {
    "op": "core/text-transform",
    "description": "Text transform on cells in column brand using expression grel:replace(value, \"Pompe Bianche\", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "brand",
    "expression": "grel:replace(value, \"Pompe Bianche\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column operator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Totalerg S.p.A.",
          "Totalerg S.p.A.."
        ],
        "to": "Totalerg S.p.A."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.G. Petroli S.R.L.",
          "Sg Petroli S.R.L."
        ],
        "to": "S.G. Petroli S.R.L."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pegaso Carburanti - S.R.L.",
          "Pegaso Carburanti S.R.L."
        ],
        "to": "Pegaso Carburanti S.R.L."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pit Stop S.R.L.",
          "Pit Stop - S.R.L."
        ],
        "to": "Pit Stop S.R.L."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Metanauto S.R.L.",
          "Metanauto - S.R.L."
        ],
        "to": "Metanauto S.R.L."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cucagas - S.R.L.",
          "Cucagas S.R.L."
        ],
        "to": "Cucagas S.R.L."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Baiguera Marco & C S.N.C.",
          "Baiguera Marco & C. S.N.C."
        ],
        "to": "Baiguera Marco & C S.N.C."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Metancar - S.R.L.",
          "Metancar S.R.L."
        ],
        "to": "Metancar S.R.L."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "G.R. Carburanti S.R.L.",
          "Gr Carburanti S.R.L."
        ],
        "to": "G.R. Carburanti S.R.L."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Isola Gas Società a Responsabilità Limitata Con Denominazione Abbreviata Isola Gas S.R.L.",
          "Isola Gas Societã? a Responsabilitã? Limitata Con Denominazione Abbreviata Isola Gas S.R.L."
        ],
        "to": "Isola Gas Società a Responsabilità Limitata Con Denominazione Abbreviata Isola Gas S.R.L."
      }
    ]
  }
]
